def wyszukiwanie_binarne(T, a, n):
    lewy = 0
    prawy = n - 1
    
    while lewy < prawy:
        srodek = (lewy + prawy) // 2
        if T[srodek] < a:
            lewy = srodek + 1
        else:
            prawy = srodek
    
    return T[lewy] == a

T = [1, 3, 5, 7, 9]
a = 5
n = len(T)
print(wyszukiwanie_binarne(T, a, n))  # Wynik: True

a = 6
print(wyszukiwanie_binarne(T, a, n))  # Wynik: False


def wbr(T, a, lewy, prawy, n):
    if lewy > prawy:
        return False
    srodek = (lewy + prawy) // 2
    if T[srodek] == a:
        return True
    elif T[srodek] < a:
        return wbr(T, a, srodek + 1, prawy, n)
    else:
        return wbr(T, a, lewy, srodek - 1, n)

T = [1, 3, 5, 7, 9]
a = 5
n = len(T)
print(wbr(T, a, 0, n - 1, n))  # Wynik: True

a = 6
print(wbr(T, a, 0, n - 1, n))  # Wynik: False
